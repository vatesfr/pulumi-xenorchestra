// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Xenorchestra.Outputs
{

    [OutputType]
    public sealed class GetXoaHostsHostResult
    {
        /// <summary>
        /// CPU information about the host. The 'cores' key will contain the number of cpu cores and the 'sockets' key will contain the number of sockets.
        /// </summary>
        public readonly ImmutableDictionary<string, int> Cpus;
        public readonly string Id;
        /// <summary>
        /// The memory size of the host.
        /// </summary>
        public readonly int Memory;
        /// <summary>
        /// The memory usage of the host.
        /// </summary>
        public readonly int MemoryUsage;
        /// <summary>
        /// The name label of the host.
        /// </summary>
        public readonly string NameLabel;
        /// <summary>
        /// Id of the pool that the host belongs to.
        /// </summary>
        public readonly string PoolId;
        /// <summary>
        /// The tags (labels) applied to the given entity.
        /// </summary>
        public readonly ImmutableArray<string> Tags;

        [OutputConstructor]
        private GetXoaHostsHostResult(
            ImmutableDictionary<string, int> cpus,

            string id,

            int memory,

            int memoryUsage,

            string nameLabel,

            string poolId,

            ImmutableArray<string> tags)
        {
            Cpus = cpus;
            Id = id;
            Memory = memory;
            MemoryUsage = memoryUsage;
            NameLabel = nameLabel;
            PoolId = poolId;
            Tags = tags;
        }
    }
}
