// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Xenorchestra.Inputs
{

    public sealed class VmDiskArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether the device should be attached to the VM.
        /// </summary>
        [Input("attached")]
        public Input<bool>? Attached { get; set; }

        /// <summary>
        /// The description for the disk
        /// </summary>
        [Input("nameDescription")]
        public Input<string>? NameDescription { get; set; }

        /// <summary>
        /// The name for the disk
        /// </summary>
        [Input("nameLabel", required: true)]
        public Input<string> NameLabel { get; set; } = null!;

        /// <summary>
        /// Indicates the order of the block device.
        /// </summary>
        [Input("position")]
        public Input<string>? Position { get; set; }

        /// <summary>
        /// The size in bytes for the disk.
        /// </summary>
        [Input("size", required: true)]
        public Input<double> Size { get; set; } = null!;

        /// <summary>
        /// The storage repository ID to use.
        /// </summary>
        [Input("srId", required: true)]
        public Input<string> SrId { get; set; } = null!;

        [Input("vbdId")]
        public Input<string>? VbdId { get; set; }

        [Input("vdiId")]
        public Input<string>? VdiId { get; set; }

        public VmDiskArgs()
        {
        }
        public static new VmDiskArgs Empty => new VmDiskArgs();
    }
}
