// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Xenorchestra
{
    public static class GetXoaTemplate
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Xenorchestra = Pulumi.Xenorchestra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var template = Xenorchestra.GetXoaTemplate.Invoke(new()
        ///     {
        ///         NameLabel = "Ubuntu Bionic Beaver 18.04",
        ///     });
        /// 
        ///     var demo_vm = new Xenorchestra.Vm("demo-vm", new()
        ///     {
        ///         Template = template.Apply(getXoaTemplateResult =&gt; getXoaTemplateResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetXoaTemplateResult> InvokeAsync(GetXoaTemplateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetXoaTemplateResult>("xenorchestra:index/getXoaTemplate:getXoaTemplate", args ?? new GetXoaTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Xenorchestra = Pulumi.Xenorchestra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var template = Xenorchestra.GetXoaTemplate.Invoke(new()
        ///     {
        ///         NameLabel = "Ubuntu Bionic Beaver 18.04",
        ///     });
        /// 
        ///     var demo_vm = new Xenorchestra.Vm("demo-vm", new()
        ///     {
        ///         Template = template.Apply(getXoaTemplateResult =&gt; getXoaTemplateResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetXoaTemplateResult> Invoke(GetXoaTemplateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetXoaTemplateResult>("xenorchestra:index/getXoaTemplate:getXoaTemplate", args ?? new GetXoaTemplateInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Xenorchestra = Pulumi.Xenorchestra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var template = Xenorchestra.GetXoaTemplate.Invoke(new()
        ///     {
        ///         NameLabel = "Ubuntu Bionic Beaver 18.04",
        ///     });
        /// 
        ///     var demo_vm = new Xenorchestra.Vm("demo-vm", new()
        ///     {
        ///         Template = template.Apply(getXoaTemplateResult =&gt; getXoaTemplateResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetXoaTemplateResult> Invoke(GetXoaTemplateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetXoaTemplateResult>("xenorchestra:index/getXoaTemplate:getXoaTemplate", args ?? new GetXoaTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetXoaTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the template to look up.
        /// </summary>
        [Input("nameLabel", required: true)]
        public string NameLabel { get; set; } = null!;

        /// <summary>
        /// The id of the pool that the template belongs to.
        /// </summary>
        [Input("poolId")]
        public string? PoolId { get; set; }

        public GetXoaTemplateArgs()
        {
        }
        public static new GetXoaTemplateArgs Empty => new GetXoaTemplateArgs();
    }

    public sealed class GetXoaTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the template to look up.
        /// </summary>
        [Input("nameLabel", required: true)]
        public Input<string> NameLabel { get; set; } = null!;

        /// <summary>
        /// The id of the pool that the template belongs to.
        /// </summary>
        [Input("poolId")]
        public Input<string>? PoolId { get; set; }

        public GetXoaTemplateInvokeArgs()
        {
        }
        public static new GetXoaTemplateInvokeArgs Empty => new GetXoaTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetXoaTemplateResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the template to look up.
        /// </summary>
        public readonly string NameLabel;
        /// <summary>
        /// The id of the pool that the template belongs to.
        /// </summary>
        public readonly string? PoolId;
        /// <summary>
        /// The uuid of the template.
        /// </summary>
        public readonly string Uuid;

        [OutputConstructor]
        private GetXoaTemplateResult(
            string id,

            string nameLabel,

            string? poolId,

            string uuid)
        {
            Id = id;
            NameLabel = nameLabel;
            PoolId = poolId;
            Uuid = uuid;
        }
    }
}
