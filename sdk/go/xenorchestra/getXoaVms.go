// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package xenorchestra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/vatesfr/pulumi-xenorchestra/sdk/v2/go/xenorchestra/internal"
)

// Use this data source to filter Xenorchestra VMs by certain criteria (pool_id, powerState or host) for use in other resources.
func GetXoaVms(ctx *pulumi.Context, args *GetXoaVmsArgs, opts ...pulumi.InvokeOption) (*GetXoaVmsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetXoaVmsResult
	err := ctx.Invoke("xenorchestra:index/getXoaVms:getXoaVms", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getXoaVms.
type GetXoaVmsArgs struct {
	Host *string `pulumi:"host"`
	// The ID of the pool the VM belongs to.
	PoolId string `pulumi:"poolId"`
	// The power state of the vms. (Running, Halted)
	PowerState *string `pulumi:"powerState"`
}

// A collection of values returned by getXoaVms.
type GetXoaVmsResult struct {
	Host *string `pulumi:"host"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ID of the pool the VM belongs to.
	PoolId string `pulumi:"poolId"`
	// The power state of the vms. (Running, Halted)
	PowerState *string `pulumi:"powerState"`
	// A list of information for all vms found in this pool.
	Vms []GetXoaVmsVm `pulumi:"vms"`
}

func GetXoaVmsOutput(ctx *pulumi.Context, args GetXoaVmsOutputArgs, opts ...pulumi.InvokeOption) GetXoaVmsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetXoaVmsResultOutput, error) {
			args := v.(GetXoaVmsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("xenorchestra:index/getXoaVms:getXoaVms", args, GetXoaVmsResultOutput{}, options).(GetXoaVmsResultOutput), nil
		}).(GetXoaVmsResultOutput)
}

// A collection of arguments for invoking getXoaVms.
type GetXoaVmsOutputArgs struct {
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The ID of the pool the VM belongs to.
	PoolId pulumi.StringInput `pulumi:"poolId"`
	// The power state of the vms. (Running, Halted)
	PowerState pulumi.StringPtrInput `pulumi:"powerState"`
}

func (GetXoaVmsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetXoaVmsArgs)(nil)).Elem()
}

// A collection of values returned by getXoaVms.
type GetXoaVmsResultOutput struct{ *pulumi.OutputState }

func (GetXoaVmsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetXoaVmsResult)(nil)).Elem()
}

func (o GetXoaVmsResultOutput) ToGetXoaVmsResultOutput() GetXoaVmsResultOutput {
	return o
}

func (o GetXoaVmsResultOutput) ToGetXoaVmsResultOutputWithContext(ctx context.Context) GetXoaVmsResultOutput {
	return o
}

func (o GetXoaVmsResultOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetXoaVmsResult) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetXoaVmsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetXoaVmsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the pool the VM belongs to.
func (o GetXoaVmsResultOutput) PoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetXoaVmsResult) string { return v.PoolId }).(pulumi.StringOutput)
}

// The power state of the vms. (Running, Halted)
func (o GetXoaVmsResultOutput) PowerState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetXoaVmsResult) *string { return v.PowerState }).(pulumi.StringPtrOutput)
}

// A list of information for all vms found in this pool.
func (o GetXoaVmsResultOutput) Vms() GetXoaVmsVmArrayOutput {
	return o.ApplyT(func(v GetXoaVmsResult) []GetXoaVmsVm { return v.Vms }).(GetXoaVmsVmArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetXoaVmsResultOutput{})
}
