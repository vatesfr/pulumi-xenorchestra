// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package xenorchestra

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/vatesfr/pulumi-xenorchestra/sdk/v2/go/xenorchestra/internal"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/vatesfr/pulumi-xenorchestra/sdk/v2/go/xenorchestra"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			host1, err := xenorchestra.GetXoaHost(ctx, &xenorchestra.GetXoaHostArgs{
//				NameLabel: "Your host",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			// Create a single server network private network
//			_, err = xenorchestra.NewXoaNetwork(ctx, "private_network", &xenorchestra.XoaNetworkArgs{
//				NameLabel: pulumi.String("new network name"),
//				PoolId:    pulumi.String(host1.PoolId),
//			})
//			if err != nil {
//				return err
//			}
//			// Create a network with a 22 VLAN tag from the eth0 device
//			_, err = xenorchestra.NewXoaNetwork(ctx, "vlan_network", &xenorchestra.XoaNetworkArgs{
//				NameLabel:       pulumi.String("new network name"),
//				PoolId:          pulumi.String(host1.PoolId),
//				SourcePifDevice: pulumi.String("eth0"),
//				Vlan:            pulumi.Int(22),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type XoaNetwork struct {
	pulumi.CustomResourceState

	Automatic pulumi.BoolPtrOutput `pulumi:"automatic"`
	// This argument controls whether the network should enforce VIF locking. This defaults to `false` which means that no filtering rules are applied.
	DefaultIsLocked pulumi.BoolPtrOutput `pulumi:"defaultIsLocked"`
	// The MTU of the network. Defaults to `1500` if unspecified.
	Mtu             pulumi.IntPtrOutput    `pulumi:"mtu"`
	NameDescription pulumi.StringPtrOutput `pulumi:"nameDescription"`
	// The name label of the network.
	NameLabel pulumi.StringOutput `pulumi:"nameLabel"`
	// Whether the network should use a network block device. Defaults to `false` if unspecified.
	Nbd pulumi.BoolPtrOutput `pulumi:"nbd"`
	// The pool id that this network should belong to.
	PoolId pulumi.StringOutput `pulumi:"poolId"`
	// The PIF device (eth0, eth1, etc) that will be used as an input during network creation. This parameter is required if a vlan is specified.
	SourcePifDevice pulumi.StringPtrOutput `pulumi:"sourcePifDevice"`
	// The vlan to use for the network. Defaults to `0` meaning no VLAN.
	Vlan pulumi.IntPtrOutput `pulumi:"vlan"`
}

// NewXoaNetwork registers a new resource with the given unique name, arguments, and options.
func NewXoaNetwork(ctx *pulumi.Context,
	name string, args *XoaNetworkArgs, opts ...pulumi.ResourceOption) (*XoaNetwork, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NameLabel == nil {
		return nil, errors.New("invalid value for required argument 'NameLabel'")
	}
	if args.PoolId == nil {
		return nil, errors.New("invalid value for required argument 'PoolId'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("xenorchestra:index/network:Network"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource XoaNetwork
	err := ctx.RegisterResource("xenorchestra:index/xoaNetwork:XoaNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetXoaNetwork gets an existing XoaNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetXoaNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *XoaNetworkState, opts ...pulumi.ResourceOption) (*XoaNetwork, error) {
	var resource XoaNetwork
	err := ctx.ReadResource("xenorchestra:index/xoaNetwork:XoaNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering XoaNetwork resources.
type xoaNetworkState struct {
	Automatic *bool `pulumi:"automatic"`
	// This argument controls whether the network should enforce VIF locking. This defaults to `false` which means that no filtering rules are applied.
	DefaultIsLocked *bool `pulumi:"defaultIsLocked"`
	// The MTU of the network. Defaults to `1500` if unspecified.
	Mtu             *int    `pulumi:"mtu"`
	NameDescription *string `pulumi:"nameDescription"`
	// The name label of the network.
	NameLabel *string `pulumi:"nameLabel"`
	// Whether the network should use a network block device. Defaults to `false` if unspecified.
	Nbd *bool `pulumi:"nbd"`
	// The pool id that this network should belong to.
	PoolId *string `pulumi:"poolId"`
	// The PIF device (eth0, eth1, etc) that will be used as an input during network creation. This parameter is required if a vlan is specified.
	SourcePifDevice *string `pulumi:"sourcePifDevice"`
	// The vlan to use for the network. Defaults to `0` meaning no VLAN.
	Vlan *int `pulumi:"vlan"`
}

type XoaNetworkState struct {
	Automatic pulumi.BoolPtrInput
	// This argument controls whether the network should enforce VIF locking. This defaults to `false` which means that no filtering rules are applied.
	DefaultIsLocked pulumi.BoolPtrInput
	// The MTU of the network. Defaults to `1500` if unspecified.
	Mtu             pulumi.IntPtrInput
	NameDescription pulumi.StringPtrInput
	// The name label of the network.
	NameLabel pulumi.StringPtrInput
	// Whether the network should use a network block device. Defaults to `false` if unspecified.
	Nbd pulumi.BoolPtrInput
	// The pool id that this network should belong to.
	PoolId pulumi.StringPtrInput
	// The PIF device (eth0, eth1, etc) that will be used as an input during network creation. This parameter is required if a vlan is specified.
	SourcePifDevice pulumi.StringPtrInput
	// The vlan to use for the network. Defaults to `0` meaning no VLAN.
	Vlan pulumi.IntPtrInput
}

func (XoaNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*xoaNetworkState)(nil)).Elem()
}

type xoaNetworkArgs struct {
	Automatic *bool `pulumi:"automatic"`
	// This argument controls whether the network should enforce VIF locking. This defaults to `false` which means that no filtering rules are applied.
	DefaultIsLocked *bool `pulumi:"defaultIsLocked"`
	// The MTU of the network. Defaults to `1500` if unspecified.
	Mtu             *int    `pulumi:"mtu"`
	NameDescription *string `pulumi:"nameDescription"`
	// The name label of the network.
	NameLabel string `pulumi:"nameLabel"`
	// Whether the network should use a network block device. Defaults to `false` if unspecified.
	Nbd *bool `pulumi:"nbd"`
	// The pool id that this network should belong to.
	PoolId string `pulumi:"poolId"`
	// The PIF device (eth0, eth1, etc) that will be used as an input during network creation. This parameter is required if a vlan is specified.
	SourcePifDevice *string `pulumi:"sourcePifDevice"`
	// The vlan to use for the network. Defaults to `0` meaning no VLAN.
	Vlan *int `pulumi:"vlan"`
}

// The set of arguments for constructing a XoaNetwork resource.
type XoaNetworkArgs struct {
	Automatic pulumi.BoolPtrInput
	// This argument controls whether the network should enforce VIF locking. This defaults to `false` which means that no filtering rules are applied.
	DefaultIsLocked pulumi.BoolPtrInput
	// The MTU of the network. Defaults to `1500` if unspecified.
	Mtu             pulumi.IntPtrInput
	NameDescription pulumi.StringPtrInput
	// The name label of the network.
	NameLabel pulumi.StringInput
	// Whether the network should use a network block device. Defaults to `false` if unspecified.
	Nbd pulumi.BoolPtrInput
	// The pool id that this network should belong to.
	PoolId pulumi.StringInput
	// The PIF device (eth0, eth1, etc) that will be used as an input during network creation. This parameter is required if a vlan is specified.
	SourcePifDevice pulumi.StringPtrInput
	// The vlan to use for the network. Defaults to `0` meaning no VLAN.
	Vlan pulumi.IntPtrInput
}

func (XoaNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*xoaNetworkArgs)(nil)).Elem()
}

type XoaNetworkInput interface {
	pulumi.Input

	ToXoaNetworkOutput() XoaNetworkOutput
	ToXoaNetworkOutputWithContext(ctx context.Context) XoaNetworkOutput
}

func (*XoaNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**XoaNetwork)(nil)).Elem()
}

func (i *XoaNetwork) ToXoaNetworkOutput() XoaNetworkOutput {
	return i.ToXoaNetworkOutputWithContext(context.Background())
}

func (i *XoaNetwork) ToXoaNetworkOutputWithContext(ctx context.Context) XoaNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XoaNetworkOutput)
}

// XoaNetworkArrayInput is an input type that accepts XoaNetworkArray and XoaNetworkArrayOutput values.
// You can construct a concrete instance of `XoaNetworkArrayInput` via:
//
//	XoaNetworkArray{ XoaNetworkArgs{...} }
type XoaNetworkArrayInput interface {
	pulumi.Input

	ToXoaNetworkArrayOutput() XoaNetworkArrayOutput
	ToXoaNetworkArrayOutputWithContext(context.Context) XoaNetworkArrayOutput
}

type XoaNetworkArray []XoaNetworkInput

func (XoaNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*XoaNetwork)(nil)).Elem()
}

func (i XoaNetworkArray) ToXoaNetworkArrayOutput() XoaNetworkArrayOutput {
	return i.ToXoaNetworkArrayOutputWithContext(context.Background())
}

func (i XoaNetworkArray) ToXoaNetworkArrayOutputWithContext(ctx context.Context) XoaNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XoaNetworkArrayOutput)
}

// XoaNetworkMapInput is an input type that accepts XoaNetworkMap and XoaNetworkMapOutput values.
// You can construct a concrete instance of `XoaNetworkMapInput` via:
//
//	XoaNetworkMap{ "key": XoaNetworkArgs{...} }
type XoaNetworkMapInput interface {
	pulumi.Input

	ToXoaNetworkMapOutput() XoaNetworkMapOutput
	ToXoaNetworkMapOutputWithContext(context.Context) XoaNetworkMapOutput
}

type XoaNetworkMap map[string]XoaNetworkInput

func (XoaNetworkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*XoaNetwork)(nil)).Elem()
}

func (i XoaNetworkMap) ToXoaNetworkMapOutput() XoaNetworkMapOutput {
	return i.ToXoaNetworkMapOutputWithContext(context.Background())
}

func (i XoaNetworkMap) ToXoaNetworkMapOutputWithContext(ctx context.Context) XoaNetworkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XoaNetworkMapOutput)
}

type XoaNetworkOutput struct{ *pulumi.OutputState }

func (XoaNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**XoaNetwork)(nil)).Elem()
}

func (o XoaNetworkOutput) ToXoaNetworkOutput() XoaNetworkOutput {
	return o
}

func (o XoaNetworkOutput) ToXoaNetworkOutputWithContext(ctx context.Context) XoaNetworkOutput {
	return o
}

func (o XoaNetworkOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *XoaNetwork) pulumi.BoolPtrOutput { return v.Automatic }).(pulumi.BoolPtrOutput)
}

// This argument controls whether the network should enforce VIF locking. This defaults to `false` which means that no filtering rules are applied.
func (o XoaNetworkOutput) DefaultIsLocked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *XoaNetwork) pulumi.BoolPtrOutput { return v.DefaultIsLocked }).(pulumi.BoolPtrOutput)
}

// The MTU of the network. Defaults to `1500` if unspecified.
func (o XoaNetworkOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *XoaNetwork) pulumi.IntPtrOutput { return v.Mtu }).(pulumi.IntPtrOutput)
}

func (o XoaNetworkOutput) NameDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *XoaNetwork) pulumi.StringPtrOutput { return v.NameDescription }).(pulumi.StringPtrOutput)
}

// The name label of the network.
func (o XoaNetworkOutput) NameLabel() pulumi.StringOutput {
	return o.ApplyT(func(v *XoaNetwork) pulumi.StringOutput { return v.NameLabel }).(pulumi.StringOutput)
}

// Whether the network should use a network block device. Defaults to `false` if unspecified.
func (o XoaNetworkOutput) Nbd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *XoaNetwork) pulumi.BoolPtrOutput { return v.Nbd }).(pulumi.BoolPtrOutput)
}

// The pool id that this network should belong to.
func (o XoaNetworkOutput) PoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *XoaNetwork) pulumi.StringOutput { return v.PoolId }).(pulumi.StringOutput)
}

// The PIF device (eth0, eth1, etc) that will be used as an input during network creation. This parameter is required if a vlan is specified.
func (o XoaNetworkOutput) SourcePifDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *XoaNetwork) pulumi.StringPtrOutput { return v.SourcePifDevice }).(pulumi.StringPtrOutput)
}

// The vlan to use for the network. Defaults to `0` meaning no VLAN.
func (o XoaNetworkOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *XoaNetwork) pulumi.IntPtrOutput { return v.Vlan }).(pulumi.IntPtrOutput)
}

type XoaNetworkArrayOutput struct{ *pulumi.OutputState }

func (XoaNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*XoaNetwork)(nil)).Elem()
}

func (o XoaNetworkArrayOutput) ToXoaNetworkArrayOutput() XoaNetworkArrayOutput {
	return o
}

func (o XoaNetworkArrayOutput) ToXoaNetworkArrayOutputWithContext(ctx context.Context) XoaNetworkArrayOutput {
	return o
}

func (o XoaNetworkArrayOutput) Index(i pulumi.IntInput) XoaNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *XoaNetwork {
		return vs[0].([]*XoaNetwork)[vs[1].(int)]
	}).(XoaNetworkOutput)
}

type XoaNetworkMapOutput struct{ *pulumi.OutputState }

func (XoaNetworkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*XoaNetwork)(nil)).Elem()
}

func (o XoaNetworkMapOutput) ToXoaNetworkMapOutput() XoaNetworkMapOutput {
	return o
}

func (o XoaNetworkMapOutput) ToXoaNetworkMapOutputWithContext(ctx context.Context) XoaNetworkMapOutput {
	return o
}

func (o XoaNetworkMapOutput) MapIndex(k pulumi.StringInput) XoaNetworkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *XoaNetwork {
		return vs[0].(map[string]*XoaNetwork)[vs[1].(string)]
	}).(XoaNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*XoaNetworkInput)(nil)).Elem(), &XoaNetwork{})
	pulumi.RegisterInputType(reflect.TypeOf((*XoaNetworkArrayInput)(nil)).Elem(), XoaNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*XoaNetworkMapInput)(nil)).Elem(), XoaNetworkMap{})
	pulumi.RegisterOutputType(XoaNetworkOutput{})
	pulumi.RegisterOutputType(XoaNetworkArrayOutput{})
	pulumi.RegisterOutputType(XoaNetworkMapOutput{})
}
