// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package xenorchestra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/vatesfr/pulumi-xenorchestra/sdk/v2/go/xenorchestra/internal"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/vatesfr/pulumi-xenorchestra/sdk/v2/go/xenorchestra"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			template, err := xenorchestra.GetXoaTemplate(ctx, &xenorchestra.GetXoaTemplateArgs{
//				NameLabel: "Ubuntu Bionic Beaver 18.04",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = xenorchestra.NewVm(ctx, "demo-vm", &xenorchestra.VmArgs{
//				Template: pulumi.String(template.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetXoaTemplate(ctx *pulumi.Context, args *GetXoaTemplateArgs, opts ...pulumi.InvokeOption) (*GetXoaTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetXoaTemplateResult
	err := ctx.Invoke("xenorchestra:index/getXoaTemplate:getXoaTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getXoaTemplate.
type GetXoaTemplateArgs struct {
	// The name of the template to look up.
	NameLabel string `pulumi:"nameLabel"`
	// The id of the pool that the template belongs to.
	PoolId *string `pulumi:"poolId"`
}

// A collection of values returned by getXoaTemplate.
type GetXoaTemplateResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the template to look up.
	NameLabel string `pulumi:"nameLabel"`
	// The id of the pool that the template belongs to.
	PoolId *string `pulumi:"poolId"`
	// The uuid of the template.
	Uuid string `pulumi:"uuid"`
}

func GetXoaTemplateOutput(ctx *pulumi.Context, args GetXoaTemplateOutputArgs, opts ...pulumi.InvokeOption) GetXoaTemplateResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetXoaTemplateResultOutput, error) {
			args := v.(GetXoaTemplateArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("xenorchestra:index/getXoaTemplate:getXoaTemplate", args, GetXoaTemplateResultOutput{}, options).(GetXoaTemplateResultOutput), nil
		}).(GetXoaTemplateResultOutput)
}

// A collection of arguments for invoking getXoaTemplate.
type GetXoaTemplateOutputArgs struct {
	// The name of the template to look up.
	NameLabel pulumi.StringInput `pulumi:"nameLabel"`
	// The id of the pool that the template belongs to.
	PoolId pulumi.StringPtrInput `pulumi:"poolId"`
}

func (GetXoaTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetXoaTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getXoaTemplate.
type GetXoaTemplateResultOutput struct{ *pulumi.OutputState }

func (GetXoaTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetXoaTemplateResult)(nil)).Elem()
}

func (o GetXoaTemplateResultOutput) ToGetXoaTemplateResultOutput() GetXoaTemplateResultOutput {
	return o
}

func (o GetXoaTemplateResultOutput) ToGetXoaTemplateResultOutputWithContext(ctx context.Context) GetXoaTemplateResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetXoaTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetXoaTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the template to look up.
func (o GetXoaTemplateResultOutput) NameLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetXoaTemplateResult) string { return v.NameLabel }).(pulumi.StringOutput)
}

// The id of the pool that the template belongs to.
func (o GetXoaTemplateResultOutput) PoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetXoaTemplateResult) *string { return v.PoolId }).(pulumi.StringPtrOutput)
}

// The uuid of the template.
func (o GetXoaTemplateResultOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetXoaTemplateResult) string { return v.Uuid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetXoaTemplateResultOutput{})
}
