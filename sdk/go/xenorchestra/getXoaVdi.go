// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package xenorchestra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/vatesfr/pulumi-xenorchestra/sdk/v2/go/xenorchestra/internal"
)

// ## Example Usage
func GetXoaVdi(ctx *pulumi.Context, args *GetXoaVdiArgs, opts ...pulumi.InvokeOption) (*GetXoaVdiResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetXoaVdiResult
	err := ctx.Invoke("xenorchestra:index/getXoaVdi:getXoaVdi", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getXoaVdi.
type GetXoaVdiArgs struct {
	// The ID of the VDI.
	Id *string `pulumi:"id"`
	// The name of the VDI to look up.
	NameLabel *string `pulumi:"nameLabel"`
	// The ID of the pool the VDI belongs to. This is useful if you have a VDI with the same name on different pools.
	PoolId *string `pulumi:"poolId"`
	// The tags (labels) applied to the given entity.
	Tags []string `pulumi:"tags"`
}

// A collection of values returned by getXoaVdi.
type GetXoaVdiResult struct {
	// The ID of the VDI.
	Id string `pulumi:"id"`
	// The name of the VDI to look up.
	NameLabel *string `pulumi:"nameLabel"`
	// The ID of the parent VDI if one exists. An example of when a VDI will have a parent is when it was created from a VM fast clone.
	Parent string `pulumi:"parent"`
	// The ID of the pool the VDI belongs to. This is useful if you have a VDI with the same name on different pools.
	PoolId *string `pulumi:"poolId"`
	// The tags (labels) applied to the given entity.
	Tags []string `pulumi:"tags"`
}

func GetXoaVdiOutput(ctx *pulumi.Context, args GetXoaVdiOutputArgs, opts ...pulumi.InvokeOption) GetXoaVdiResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetXoaVdiResultOutput, error) {
			args := v.(GetXoaVdiArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("xenorchestra:index/getXoaVdi:getXoaVdi", args, GetXoaVdiResultOutput{}, options).(GetXoaVdiResultOutput), nil
		}).(GetXoaVdiResultOutput)
}

// A collection of arguments for invoking getXoaVdi.
type GetXoaVdiOutputArgs struct {
	// The ID of the VDI.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the VDI to look up.
	NameLabel pulumi.StringPtrInput `pulumi:"nameLabel"`
	// The ID of the pool the VDI belongs to. This is useful if you have a VDI with the same name on different pools.
	PoolId pulumi.StringPtrInput `pulumi:"poolId"`
	// The tags (labels) applied to the given entity.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetXoaVdiOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetXoaVdiArgs)(nil)).Elem()
}

// A collection of values returned by getXoaVdi.
type GetXoaVdiResultOutput struct{ *pulumi.OutputState }

func (GetXoaVdiResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetXoaVdiResult)(nil)).Elem()
}

func (o GetXoaVdiResultOutput) ToGetXoaVdiResultOutput() GetXoaVdiResultOutput {
	return o
}

func (o GetXoaVdiResultOutput) ToGetXoaVdiResultOutputWithContext(ctx context.Context) GetXoaVdiResultOutput {
	return o
}

// The ID of the VDI.
func (o GetXoaVdiResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetXoaVdiResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the VDI to look up.
func (o GetXoaVdiResultOutput) NameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetXoaVdiResult) *string { return v.NameLabel }).(pulumi.StringPtrOutput)
}

// The ID of the parent VDI if one exists. An example of when a VDI will have a parent is when it was created from a VM fast clone.
func (o GetXoaVdiResultOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v GetXoaVdiResult) string { return v.Parent }).(pulumi.StringOutput)
}

// The ID of the pool the VDI belongs to. This is useful if you have a VDI with the same name on different pools.
func (o GetXoaVdiResultOutput) PoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetXoaVdiResult) *string { return v.PoolId }).(pulumi.StringPtrOutput)
}

// The tags (labels) applied to the given entity.
func (o GetXoaVdiResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetXoaVdiResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetXoaVdiResultOutput{})
}
