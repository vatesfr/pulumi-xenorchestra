// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package xenorchestra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/vatesfr/pulumi-xenorchestra/sdk/v2/go/xenorchestra/internal"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/vatesfr/pulumi-xenorchestra/sdk/v2/go/xenorchestra"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			net, err := xenorchestra.LookupXoaNetwork(ctx, &xenorchestra.LookupXoaNetworkArgs{
//				NameLabel: "Pool-wide network associated with eth0",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = xenorchestra.NewVm(ctx, "demo-vm", &xenorchestra.VmArgs{
//				Networks: xenorchestra.VmNetworkArray{
//					&xenorchestra.VmNetworkArgs{
//						NetworkId: pulumi.String(net.Id),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupXoaNetwork(ctx *pulumi.Context, args *LookupXoaNetworkArgs, opts ...pulumi.InvokeOption) (*LookupXoaNetworkResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupXoaNetworkResult
	err := ctx.Invoke("xenorchestra:index/getXoaNetwork:getXoaNetwork", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getXoaNetwork.
type LookupXoaNetworkArgs struct {
	// The name of the bridge network interface.
	Bridge *string `pulumi:"bridge"`
	// The name of the network.
	NameLabel string `pulumi:"nameLabel"`
	// The pool the network is associated with.
	PoolId *string `pulumi:"poolId"`
}

// A collection of values returned by getXoaNetwork.
type LookupXoaNetworkResult struct {
	// The name of the bridge network interface.
	Bridge string `pulumi:"bridge"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the network.
	NameLabel string `pulumi:"nameLabel"`
	// The pool the network is associated with.
	PoolId *string `pulumi:"poolId"`
}

func LookupXoaNetworkOutput(ctx *pulumi.Context, args LookupXoaNetworkOutputArgs, opts ...pulumi.InvokeOption) LookupXoaNetworkResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupXoaNetworkResultOutput, error) {
			args := v.(LookupXoaNetworkArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("xenorchestra:index/getXoaNetwork:getXoaNetwork", args, LookupXoaNetworkResultOutput{}, options).(LookupXoaNetworkResultOutput), nil
		}).(LookupXoaNetworkResultOutput)
}

// A collection of arguments for invoking getXoaNetwork.
type LookupXoaNetworkOutputArgs struct {
	// The name of the bridge network interface.
	Bridge pulumi.StringPtrInput `pulumi:"bridge"`
	// The name of the network.
	NameLabel pulumi.StringInput `pulumi:"nameLabel"`
	// The pool the network is associated with.
	PoolId pulumi.StringPtrInput `pulumi:"poolId"`
}

func (LookupXoaNetworkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupXoaNetworkArgs)(nil)).Elem()
}

// A collection of values returned by getXoaNetwork.
type LookupXoaNetworkResultOutput struct{ *pulumi.OutputState }

func (LookupXoaNetworkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupXoaNetworkResult)(nil)).Elem()
}

func (o LookupXoaNetworkResultOutput) ToLookupXoaNetworkResultOutput() LookupXoaNetworkResultOutput {
	return o
}

func (o LookupXoaNetworkResultOutput) ToLookupXoaNetworkResultOutputWithContext(ctx context.Context) LookupXoaNetworkResultOutput {
	return o
}

// The name of the bridge network interface.
func (o LookupXoaNetworkResultOutput) Bridge() pulumi.StringOutput {
	return o.ApplyT(func(v LookupXoaNetworkResult) string { return v.Bridge }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupXoaNetworkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupXoaNetworkResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the network.
func (o LookupXoaNetworkResultOutput) NameLabel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupXoaNetworkResult) string { return v.NameLabel }).(pulumi.StringOutput)
}

// The pool the network is associated with.
func (o LookupXoaNetworkResultOutput) PoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupXoaNetworkResult) *string { return v.PoolId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupXoaNetworkResultOutput{})
}
