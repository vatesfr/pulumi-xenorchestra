// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
	"github.com/vatesfr/pulumi-xenorchestra/sdk/v2/go/xenorchestra/internal"
)

var _ = internal.GetEnvOrDefault

// Whether SSL should be verified or not. Can be set via the XOA_INSECURE environment variable.
func GetInsecure(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "xenorchestra:insecure")
}

// Password for xoa api. Can be set via the XOA_PASSWORD environment variable.
func GetPassword(ctx *pulumi.Context) string {
	return config.Get(ctx, "xenorchestra:password")
}

// If `retryMode` is set, this specifies the duration for which the backoff method will continue retries. Can be set via
// the `XOA_RETRY_MAX_TIME` environment variable
func GetRetryMaxTime(ctx *pulumi.Context) string {
	return config.Get(ctx, "xenorchestra:retryMaxTime")
}

// Specifies if retries should be attempted for requests that require eventual . Can be set via the XOA_RETRY_MODE
// environment variable.
func GetRetryMode(ctx *pulumi.Context) string {
	return config.Get(ctx, "xenorchestra:retryMode")
}

// Password for xoa api. Can be set via the XOA_TOKEN environment variable.
func GetToken(ctx *pulumi.Context) string {
	return config.Get(ctx, "xenorchestra:token")
}

// Hostname of the xoa router. Can be set via the XOA_URL environment variable.
func GetUrl(ctx *pulumi.Context) string {
	return config.Get(ctx, "xenorchestra:url")
}

// User account for xoa api. Can be set via the XOA_USER environment variable.
func GetUsername(ctx *pulumi.Context) string {
	return config.Get(ctx, "xenorchestra:username")
}
