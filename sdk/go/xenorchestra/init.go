// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package xenorchestra

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/vatesfr/pulumi-xenorchestra/sdk/v2/go/xenorchestra/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "xenorchestra:index/acl:Acl":
		r = &Acl{}
	case "xenorchestra:index/cloudConfig:CloudConfig":
		r = &CloudConfig{}
	case "xenorchestra:index/resourceSet:ResourceSet":
		r = &ResourceSet{}
	case "xenorchestra:index/vdi:Vdi":
		r = &Vdi{}
	case "xenorchestra:index/vm:Vm":
		r = &Vm{}
	case "xenorchestra:index/xoaBondedNetwork:XoaBondedNetwork":
		r = &XoaBondedNetwork{}
	case "xenorchestra:index/xoaNetwork:XoaNetwork":
		r = &XoaNetwork{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:xenorchestra" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"xenorchestra",
		"index/acl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"xenorchestra",
		"index/cloudConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"xenorchestra",
		"index/resourceSet",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"xenorchestra",
		"index/vdi",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"xenorchestra",
		"index/vm",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"xenorchestra",
		"index/xoaBondedNetwork",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"xenorchestra",
		"index/xoaNetwork",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"xenorchestra",
		&pkg{version},
	)
}
