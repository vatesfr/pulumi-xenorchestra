// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 */
export function getXoaVdi(args?: GetXoaVdiArgs, opts?: pulumi.InvokeOptions): Promise<GetXoaVdiResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("xenorchestra:index/getXoaVdi:getXoaVdi", {
        "id": args.id,
        "nameLabel": args.nameLabel,
        "poolId": args.poolId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getXoaVdi.
 */
export interface GetXoaVdiArgs {
    /**
     * The ID of the VDI.
     */
    id?: string;
    /**
     * The name of the VDI to look up.
     */
    nameLabel?: string;
    /**
     * The ID of the pool the VDI belongs to. This is useful if you have a VDI with the same name on different pools.
     */
    poolId?: string;
    /**
     * The tags (labels) applied to the given entity.
     */
    tags?: string[];
}

/**
 * A collection of values returned by getXoaVdi.
 */
export interface GetXoaVdiResult {
    /**
     * The ID of the VDI.
     */
    readonly id: string;
    /**
     * The name of the VDI to look up.
     */
    readonly nameLabel?: string;
    /**
     * The ID of the parent VDI if one exists. An example of when a VDI will have a parent is when it was created from a VM fast clone.
     */
    readonly parent: string;
    /**
     * The ID of the pool the VDI belongs to. This is useful if you have a VDI with the same name on different pools.
     */
    readonly poolId?: string;
    /**
     * The tags (labels) applied to the given entity.
     */
    readonly tags?: string[];
}
/**
 * ## Example Usage
 */
export function getXoaVdiOutput(args?: GetXoaVdiOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetXoaVdiResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("xenorchestra:index/getXoaVdi:getXoaVdi", {
        "id": args.id,
        "nameLabel": args.nameLabel,
        "poolId": args.poolId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getXoaVdi.
 */
export interface GetXoaVdiOutputArgs {
    /**
     * The ID of the VDI.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the VDI to look up.
     */
    nameLabel?: pulumi.Input<string>;
    /**
     * The ID of the pool the VDI belongs to. This is useful if you have a VDI with the same name on different pools.
     */
    poolId?: pulumi.Input<string>;
    /**
     * The tags (labels) applied to the given entity.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
