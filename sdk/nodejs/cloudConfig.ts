// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Creates a Xen Orchestra cloud config resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as xenorchestra from "@vates/pulumi-xenorchestra";
 *
 * const demo = new xenorchestra.CloudConfig("demo", {
 *     name: "cloud config name",
 *     template: `#cloud-config
 *
 * runcmd:
 *  - [ ls, -l, / ]
 *  - [ sh, -xc, "echo (date) ': hello world!'" ]
 *  - [ sh, -c, echo "=========hello world'=========" ]
 *  - ls -l /root
 * `,
 * });
 * const bar = new xenorchestra.Vm("bar", {cloudConfig: demo.template});
 * ```
 */
export class CloudConfig extends pulumi.CustomResource {
    /**
     * Get an existing CloudConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudConfigState, opts?: pulumi.CustomResourceOptions): CloudConfig {
        return new CloudConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'xenorchestra:index/cloudConfig:CloudConfig';

    /**
     * Returns true if the given object is an instance of CloudConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudConfig.__pulumiType;
    }

    /**
     * The name of the cloud config.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The cloud init config. See the cloud init docs for more [information](https://cloudinit.readthedocs.io/en/latest/topics/examples.html).
     */
    public readonly template!: pulumi.Output<string>;

    /**
     * Create a CloudConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudConfigArgs | CloudConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudConfigState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["template"] = state ? state.template : undefined;
        } else {
            const args = argsOrState as CloudConfigArgs | undefined;
            if ((!args || args.template === undefined) && !opts.urn) {
                throw new Error("Missing required property 'template'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["template"] = args ? args.template : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudConfig resources.
 */
export interface CloudConfigState {
    /**
     * The name of the cloud config.
     */
    name?: pulumi.Input<string>;
    /**
     * The cloud init config. See the cloud init docs for more [information](https://cloudinit.readthedocs.io/en/latest/topics/examples.html).
     */
    template?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudConfig resource.
 */
export interface CloudConfigArgs {
    /**
     * The name of the cloud config.
     */
    name?: pulumi.Input<string>;
    /**
     * The cloud init config. See the cloud init docs for more [information](https://cloudinit.readthedocs.io/en/latest/topics/examples.html).
     */
    template: pulumi.Input<string>;
}
