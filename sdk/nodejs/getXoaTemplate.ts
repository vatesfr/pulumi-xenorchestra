// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as xenorchestra from "@vates/pulumi-xenorchestra";
 *
 * const template = xenorchestra.getXoaTemplate({
 *     nameLabel: "Ubuntu Bionic Beaver 18.04",
 * });
 * const demo_vm = new xenorchestra.Vm("demo-vm", {template: template.then(template => template.id)});
 * ```
 */
export function getXoaTemplate(args: GetXoaTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetXoaTemplateResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("xenorchestra:index/getXoaTemplate:getXoaTemplate", {
        "nameLabel": args.nameLabel,
        "poolId": args.poolId,
    }, opts);
}

/**
 * A collection of arguments for invoking getXoaTemplate.
 */
export interface GetXoaTemplateArgs {
    /**
     * The name of the template to look up.
     */
    nameLabel: string;
    /**
     * The id of the pool that the template belongs to.
     */
    poolId?: string;
}

/**
 * A collection of values returned by getXoaTemplate.
 */
export interface GetXoaTemplateResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the template to look up.
     */
    readonly nameLabel: string;
    /**
     * The id of the pool that the template belongs to.
     */
    readonly poolId?: string;
    /**
     * The uuid of the template.
     */
    readonly uuid: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as xenorchestra from "@vates/pulumi-xenorchestra";
 *
 * const template = xenorchestra.getXoaTemplate({
 *     nameLabel: "Ubuntu Bionic Beaver 18.04",
 * });
 * const demo_vm = new xenorchestra.Vm("demo-vm", {template: template.then(template => template.id)});
 * ```
 */
export function getXoaTemplateOutput(args: GetXoaTemplateOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetXoaTemplateResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("xenorchestra:index/getXoaTemplate:getXoaTemplate", {
        "nameLabel": args.nameLabel,
        "poolId": args.poolId,
    }, opts);
}

/**
 * A collection of arguments for invoking getXoaTemplate.
 */
export interface GetXoaTemplateOutputArgs {
    /**
     * The name of the template to look up.
     */
    nameLabel: pulumi.Input<string>;
    /**
     * The id of the pool that the template belongs to.
     */
    poolId?: pulumi.Input<string>;
}
